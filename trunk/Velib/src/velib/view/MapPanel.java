/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MapPanel.java
 *
 * Created on Mar 7, 2011, 10:08:33 AM
 */

package velib.view;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import velib.dao.BorneSingleton;
import velib.dao.BornesDAO;
import velib.model.Borne;

/**
 *
 * @author andre
 * Using Google Map static API
 */
public class MapPanel extends javax.swing.JPanel
{

    /*
     * "http://maps.google.com"
        + "/maps/api/staticmap?"
        + "center=France,Nimes&zoom=14&size=400x400&sensor=false
     */

    private Borne thisStation;
    private Borne[] otherStations;
    
    private BufferedImage image;


    /** Creates new form MapPanel */
    public MapPanel()
    {
        initComponents();

        /*
         * TODO: this is for testing only but it should really get
         * the value from a calling controller (through constructor arguments)
         */
        BornesDAO bornesDAO = new BornesDAO();
        this.thisStation = BorneSingleton.getInstance();
        this.otherStations = bornesDAO.findAllBorne();

        setUpMapImage();
    }

    public MapPanel(Borne thisStation, Borne[] otherStations)
    {
        this();
        
        this.thisStation = thisStation;
        this.otherStations = otherStations;

        /*
         * TODO: this is for testing only but it should really get
         * the value from a calling controller (through constructor arguments)
         */
        BornesDAO bornesDAO = new BornesDAO();
        this.thisStation = BorneSingleton.getInstance();
        this.otherStations = bornesDAO.findAllBorne();

        setUpMapImage();
    }

    /*
     * TODO: finish up
     */
    private String createUrlString()
    {
        double latlong[];
        latlong = thisStation.getLatLong();

        String stationMarker;
        stationMarker = createMarkerString("blue",
                "S", latlong);


        // TODO: split up server and GET url
        String urlString =
        "http://maps.google.com"
        + "/maps/api/staticmap?"
        + "center=France,Nimes&zoom=14&size=400x400&sensor=false"
        + "&"
        + stationMarker;

        return urlString;
    }

    private void setUpMapImage()
    {
        URL url = null;
        String urlString = createUrlString();
        try
        {
            url = new URL(urlString);
        }
        catch (MalformedURLException ex)
        {
            Logger.getLogger(MapPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try
        {
            image = ImageIO.read(url);
        }
        catch (IOException ex)
        {
            Logger.getLogger(
                    MapPanel.class.getName()).log(
                    Level.SEVERE, null, ex);
        }
    }

    // TODO: cleaning: java color object
    private String createMarkerString(
            String color, String label, double latlong[])
    {
        String markerString =
            "markers=color:" + color +
            "%7C" + 
            "label:" + label +
            "%7C" +
            latlong[0] + 
            "," + 
            latlong[1];

        return markerString;
    }

    /*
     * Centers the map to X, Y
     */
    public void setCenter()
    {
        
    }

    @Override
    public void paintComponent(Graphics g)
    {
        // see javadoc for more info on the parameters
        g.drawImage(image, 0, 0, null);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createTitledBorder("Map"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
